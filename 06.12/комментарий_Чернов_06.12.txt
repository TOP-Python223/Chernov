  =====================  легенда  ====================

Верно      — всё хорошо и комментариев не требует
Замечания  — в целом верно, но можно лучше / комментарии
Ошибки     — что-то либо всё пошло не так
Неверно    — условие задачи неверно интерпретировано
Нет ответа — файл с решением задачи отсутствует



  =====================  задачи  =====================

1.1. Замечания:
        а) каждый аргумент перед передачей в функцию вычисляется как самостоятельное выражение — скобки вокруг аргумента не нужны
        б) добавляйте в конце пробел или '\n' в строку, которую передаёте в качестве приглашения для ввода в функцию input() — таким образом вы немного облегчаете и так сильно непростую жизнь пользователя в интерфейсе командной строки

1.2. Верно

1.3. Верно

1.4. Верно

2.1. Верно

2.2. Верно

2.3. Замечания:
        а) здесь в каждом вызове функции print() вы передаёте только один аргумент — замена значения параметра sep ни на что не влияет

2.4. Замечания:
        а) здесь уместно использование оператора расширенного присваивания +=
        б) лишний sep

2.5. Замечания:
        а) если можно записать int(input()), то, вероятно, можно и ord(input())
        б) у вас хорошее решение, но не хватает последнего шага: можно было вспомнить, что сумма чётного количества нечётных чисел всегда чётная, и записать условие ещё проще:
        
            c1_v = ord(input('Вертикаль первой клетки: '))
            c1_h = int(input('Горизонталь первой клетки: '))
            c2_v = ord(input('\nВертикаль второй клетки: '))
            c2_h = int(input('Горизонталь второй клетки: '))
            if (c1_v + c1_h + c2_v + c2_h) % 2:
                print('Нет')
            else:
                print('Да')

3.1. Замечания:
        а) Python распознаёт математическую запись сравнений: -30 < int_input <= -2
        б) приоритет логического оператора or ниже, чем у оператора and — скобки не нужны

3.2. Замечания:
        а) приоритет всех логических операторов ниже, чем у операторов сравнения и математических операторов — скобки не нужны

3.3. Замечания:
        а) является ли необходимым преобразование в int номеров горизонталей?

3.4. Ошибки:
        а) а если по вертикали модуль разности равен 1, а по горизонтали больше 1? проверьте a1 -> b7
     Замечания:
        а) на многих шахматных турнирах действует правило "взялся — ходи"; таким образом, если игрок взял фигуру и поставил её на то же место, то это де-юре совершённый ход в исходную клетку



  ==================  рекомендации  ==================

Таблица приоритетов операторов:
    https://docs.python.org/3/reference/expressions.html#operator-precedence

Руководство по оформлению кода Python:
    (eng) https://peps.python.org/pep-0008/
    (rus) https://pythonpip.ru/osnovy/pep-8-v-python-pravila-dlya-idealnogo-koda